!function(n){"undefined"!=typeof module?module.exports=n():"function"==typeof define&&"object"==typeof define.amd?define(n):this.FH=n()}(function(){function r(t,e=[]){return function(...n){return t.length<=(e.length||0)+n.length?t(...e,...n):r(t,[...e,...n])}}function u(...t){return function(n){return t.reduceRight((n,t)=>t(n),n)}}function t(...r){return function(e){return function n(t=0){return r[t]?r[t](e)||n(++t):void 0}()}}function c(t,e){return function(n){try{return e(n)}catch(n){return t(n)}}}var n=r(function(n,t){return t.then(n)}),e=r(function(n,t){return t.catch(n)});function o(...n){return n.join("_")}return{curry:r,compose:u,identify:function(t){return function(n){return t(),n}},tap:function(t){return function(n){return t(n),n}},alt:t,seq:function(...n){return function(t){n.forEach(n=>n(t))}},fork:function(n,...e){return function(t){return n(...e.map(n=>n(t)))}},safe:c,promising:function(r){return function(e){return new Promise((n,t)=>{c(t,u(n,r))(e)})}},cThen:n,cCatch:e,mem:function(e){function r(...n){return t(function(n){console.log("Mem use");n=o(...n);if(console.log("Mem use hash",n,"has",r._cache.has(n),"get",r._cache.get(n)),r._cache.has(n))return r._cache.get(n)},function(n){console.log("Mem set");var t=o(...n);return r._cache.set(t,e(...n)).get(t)})(n)}return r._cache=new Map,r}}});